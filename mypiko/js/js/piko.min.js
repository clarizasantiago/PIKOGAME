var w = 800;
var h = 600;
var game = new Phaser.Game(w, h, Phaser.CANVAS, ''); 


var basicGame = function(){

}

var player, keyboard, platform;
var life, gameOverText, bestScoreText, button, button1b, pause, play;
var startagain;
var s;
var c, cs;
basicGame.prototype ={
 preload:function() {
	
    game.load.image("bg","img/h.png");

    game.load.image("platform","img/m.png");
    game.load.image("platform1","img/m.png");
    game.load.image("platform2","img/m.png");
    game.load.image("platform3","img/m.png");
    game.load.image("platform4","img/m.png");
    game.load.image("platform8","img/ts.png");

    game.load.spritesheet("player","img/ella.png",40,115);
    game.load.spritesheet("button","img/button.png",250,250);
    game.load.spritesheet("play","img/play.png",300,130);
    game.load.spritesheet("pause","img/p.png",103,100);
    game.load.spritesheet("startagain","img/res.png",150,26);

    game.load.image("s","img/s.png");
    game.load.image("c","img/c.png");
    
},
  create:function() {
     game.scale.fullScreenScaleMode = Phaser.ScaleManager.EXACT_FIT;
    game.input.onDown.add(goFull,game);


    bg= game.add.tileSprite(0,0,game.stage.bounds.width, game.cache.getImage('bg').height,'bg');
  	//game.physics.startSystem(Phaser.Physics.ARCADE);
    tumbleweed = game.add.image (700,540, "c")
        tumbleweed.scale.x=0.1
        tumbleweed.scale.y=0.1

    player = game.add.sprite(50, 150, "player");

    button = game.add.button(50,470,"button",jump);
    button.scale.x = 0.41;
    button.scale.y = 0.41;

    button = game.add.button(550,470,"button",left);
    button.scale.x = 0.41;
    button.scale.y = 0.41;

    button = game.add.button(650,470,"button",right);
    button.scale.x = 0.41;
    button.scale.y = 0.41;


    playbutton = game.add.button(50,90,"playbutton",play);
    playbutton.scale.x = 1.5;
    playbutton.scale.y= 1.0;


    pausebutton = game.add.button(50,200,"pbutton",pause);
    pausebutton.scale.x = 1.5;
    pausebutton.scale.y= 1.0;

    startagain = game.add.button(45,45,"startagain",restart);

    player.animations.add('walk-right',[1,2,3,4,5,6,7],10,true);
    player.animations.add('walk-left',[8,9,10,11,12,13,14,15],7,true);

    s = game.add.group();
    s.enableBody = true;
    createss(10000);

    c = game.add.group();
    c.enableBody = true;
    createcs(10000);


    game.physics.arcade.enable(player);
	keyboard = game.input.keyboard.createCursorKeys();

    player.body.collideWorldBounds = true;
    player.body.gravity.y = 100;
    player.scale.y = 1;
    player.scale.x = 1;

    life = game.add.text(600,30,'Score: 0',{fill:"black"});
    bestScoreText = game.add.text(600,70,'Best: '+getScore(),{fill:"gold"});
    gameOverText = game.add.text((w/2)-100,h/2,'',{fill:"black"});

    game.camera.follow(player,Phaser.Camera.FOLLOW_TOPDOWN); 
    life.fixedToCamera = true;
    bestScoreText.fixedToCamera = true;
    gameOverText.fixedToCamera = true;
    button.fixedToCamera = true;
    pausebutton.fixedToCamera = true;

	platform = game.add.sprite(230,510,"platform");
    game.physics.arcade.enable(platform);
    platform.body.immovable = true;
    platform.scale.x = 1;
    platform1 = game.add.sprite(360,430,"platform1");
    game.physics.arcade.enable(platform1);
    platform1.body.immovable = true;
    platform1.scale.x = 1;
    platform2 = game.add.sprite(230,280,"platform2");
    game.physics.arcade.enable(platform2);
    platform2.body.immovable = true;
    platform2.scale.x = 1;
    platform3 = game.add.sprite(430,280,"platform3");
    game.physics.arcade.enable(platform3);
    platform3.body.immovable = true;
    platform3.scale.x = 1;
    platform4 = game.add.sprite(340,135,"platform4");
    game.physics.arcade.enable(platform4);
    platform4.body.immovable = true;
    platform4.scale.x = 1;
    platform8 = game.add.sprite(0,580,"platform8");
    game.physics.arcade.enable(platform8);
    platform8.body.immovable = true;
    platform8.scale.x = 13;
},

 update:function() {

    //game.physics.arcade.overlap(player, platform2);
    game.physics.arcade.collide(player, platform);
    game.physics.arcade.collide(player, platform1);
    game.physics.arcade.collide(player, platform2);
    game.physics.arcade.collide(player, platform3);
    game.physics.arcade.collide(player, platform4);
    game.physics.arcade.collide(player, platform8);

    game.physics.arcade.collide(s, platform);
    game.physics.arcade.collide(s, platform1);
    game.physics.arcade.collide(s, platform2);
    game.physics.arcade.collide(s, platform3);
    game.physics.arcade.collide(s, platform4);
    game.physics.arcade.collide(c, platform8);
    
    game.physics.arcade.overlap(player,s,collectss);
    game.physics.arcade.overlap(player,c,collectcs);

        

        if(keyboard.left.isDown){
        // x++;
        player.animations.play("walk-left");
        player.body.velocity.x = -200;
        // bg.frame = 0;
    }
    else if(keyboard.right.isDown){
        // x--;
        // bg.frame = 1;
        player.animations.play("walk-right");
        player.body.velocity.x = 200;
    }
    else{
        player.body.velocity.x = 0;
        player.animations.stop();
    }

    if(keyboard.up.isDown && player.body.touching.down){
        player.body.velocity.y = -200;
    }
    

},
}
function collectcs(player,c){
    player.kill();
    gameOverText.text = "GAME OVER ";
    game._paused = true;
}

var a = 0;
function collectss(player,ss){
    a = a + 5;
    ss.kill();
    if(getScore()<=a){
        saveScore(a);
        bestScoreText.text = "Best: "+a;
    }

    life.text = "Score: "+a;
}

function createcs(time){
    setInterval(function(){
        cs = c.create(Math.random()*w,-100,"c");
        cs.body.gravity.y = 10;
        var scale = Math.random();
        diamonds.scale.y = scale*1;
        diamonds.scale.x = scale*1;

        // diamonds.body.bounce.y = 0.2;
        ss.body.collideWorldBounds = true;
    },time);
}

function restart () {
startagain.frame=0;
window.location.href = window.location.href;

}

 function createss(time){
    setInterval(function(){
        ss = s.create(Math.random()*w,-100,"s");
        ss.body.gravity.y = 10;
        var scale = Math.random();
        diamonds.scale.y = scale*1;
        diamonds.scale.x = scale*1;

        // diamonds.body.bounce.y = 0.2;
        ss.body.collideWorldBounds = true;
    },time);
}

function restart () {
startagain.frame=0;
window.location.href = window.location.href;
}

function saveScore(Score){
    localStorage.setItem("gameScore",Score);
}

function getScore(){
    return (localStorage.getItem("gameScore") == null || localStorage.getItem("gameScore") == "")?0:localStorage.getItem("gameScore");
}

 function jump(){
    button.frame = 1;
    //if(player.body.touching.down)
    {
    player.body.velocity.y=-200;
}
    setTimeout(function(){
        button.frame=0;
    },50)
}
function left(){
    button.frame = 1;
    //if(player.body.touching.down)
    {
    player.body.velocity.x=-500;
}
    setTimeout(function(){
        button.frame=0;
    },50)
}
function right(){
    button.frame = 1;
    //if(player.body.touching.down)
    {
    player.body.velocity.x=500;
}
    setTimeout(function(){
        button.frame=0;
    },50)
}
    function play(){
  {playbutton.frame=1}  
game._paused=false;
}
function pause(){
  {pausebutton.frame=1}  
setTimeout(function(){
    
pausebutton.frame=1;
game._paused=true;
});
game._paused=true;
}

/*function goFull(){
    game.scale.startFullScreen(false)
}*/
function goFull(){
    game.scale.startFullScreen(false)
}



game.state.add("gameplay",basicGame,true);
var gameProcess=function(){
	"use strict";
	return{

	}
}();